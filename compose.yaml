volumes:
  contosoads-db:
  contosoads-storage:

networks:
  contosoads-network:

services:
  imageprocessor:
    image: ${IMAGEPROCESSOR_IMAGE:-joergjo/contosoads-imageprocessor:latest}
    build:
      context: ./src/ContosoAds.ImageProcessor
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - Logging__Console__FormatterName=Simple
      - DAPR_HTTP_PORT=50001
      - DAPR_GRPC_PORT=50002
      # Set this to an actual connection string to enable tracing to Application Insights
      - APPLICATIONINSIGHTS_CONNECTION_STRING=${APPLICATIONINSIGHTS_CONNECTION_STRING}
    networks:
      - contosoads-network
  imageprocessor-dapr:
    image: "daprio/daprd:1.13.6"
    command: [
      "./daprd",
      "-app-id", "contosoads-imageprocessor",
      "-app-port", "8080",
      "-placement-host-address", "placement:50006",
      "-dapr-http-port", "50001",
      "-dapr-grpc-port", "50002",
      "-resources-path", "/components" ]
    volumes:
      - "./components/:/components"
      - "./src/ContosoAds.ImageProcessor/secrets.json:/secrets.json"
    network_mode: "service:imageprocessor"
    depends_on:
      - imageprocessor
  
  webapp:
    image: ${WEB_IMAGE:-joergjo/contosoads-web:latest}
    build:
      context: ./src/ContosoAds.Web
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Database=contosoads;Username=postgres;Password=pass@word1
      - ImageSource__Host=127.0.0.1
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - Logging__Console__FormatterName=Simple
      - DAPR_HTTP_PORT=50001
      - DAPR_GRPC_PORT=50002
      # Set this to an actual connection string to enable tracing to Application Insights
      - APPLICATIONINSIGHTS_CONNECTION_STRING=${APPLICATIONINSIGHTS_CONNECTION_STRING}
    networks:
      - contosoads-network
    depends_on:
      - db
  webapp-dapr:
    image: "daprio/daprd:1.13.6"
    command: [
      "./daprd",
      "-app-id", "contosoads-web",
      "-app-port", "8080",
      "-placement-host-address", "placement:50006",
      "-dapr-http-port", "50001",
      "-dapr-grpc-port", "50002",
      "-resources-path", "/components"]
    volumes:
      - "./components/:/components"
      - "./src/ContosoAds.Web/secrets.json:/secrets.json"
    network_mode: "service:webapp"
    depends_on:
      - webapp
  
  db:
    image: ${POSTGRES_IMAGE:-postgres:16-alpine}
    volumes:
      - contosoads-db:/var/lib/postgresql/data
      - ./deploy/migrate.sql:/docker-entrypoint-initdb.d/1-migrate.sql
    environment:
      - POSTGRES_PASSWORD=pass@word1
      - POSTGRES_DB=contosoads
    networks:
      - contosoads-network
  
  placement:
    image: "daprio/dapr:1.13.6"
    command: ["./placement", "-port", "50006"]
    networks:
      - contosoads-network
  
  redis:
    image: ${REDIS_IMAGE:-redis:alpine}
    networks:
      - contosoads-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
    volumes:
      - contosoads-storage:/data
      - ./certs:/certs
    networks:
      - contosoads-network
    command: >
      sh -c "if [ \"$$USE_HTTPS\" = 'true' ]; then 
        azurite --cert /certs/azurite.crt --key /certs/azurite.key --blobHost 0.0.0.0 --queueHost 0.0.0.0; 
      else 
        azurite; 
      fi"
    environment:
      - USE_HTTPS=${USE_HTTPS:-false}
